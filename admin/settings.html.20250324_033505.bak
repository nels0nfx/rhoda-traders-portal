<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings - Rhoda Traders</title>
    <!-- Favicon -->
    <link rel="icon" href="../images/favicon.ico" type="image/x-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="../css/styles.css">
    <style>
        /* Additional styles for settings page */
        .settings-container {
            display: grid;
            grid-template-columns: 250px 1fr;
            gap: 30px;
        }
        
        .settings-nav {
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 20px;
        }
        
        .settings-nav h3 {
            font-size: 1.1rem;
            color: var(--dark-color);
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .settings-nav ul {
            list-style: none;
        }
        
        .settings-nav li {
            margin-bottom: 10px;
        }
        
        .settings-nav a {
            display: flex;
            align-items: center;
            padding: 10px;
            border-radius: 5px;
            color: var(--dark-color);
            transition: all 0.3s ease;
        }
        
        .settings-nav a:hover {
            background-color: #f5f5f5;
        }
        
        .settings-nav a.active {
            background-color: #f0f7ff;
            color: var(--primary-color);
            font-weight: 500;
        }
        
        .settings-nav i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .settings-content {
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 30px;
        }
        
        .settings-section {
            margin-bottom: 40px;
        }
        
        .settings-section:last-child {
            margin-bottom: 0;
        }
        
        .settings-section h2 {
            font-size: 1.5rem;
            color: var(--primary-color);
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(10, 61, 98, 0.1);
        }
        
        .form-check {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .form-check input {
            margin-right: 10px;
        }
        
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 30px;
        }
        
        .card {
            background-color: #f9f9f9;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .card-title {
            font-weight: 600;
            color: var(--dark-color);
        }
        
        .card-actions {
            display: flex;
            gap: 10px;
        }
        
        .card-body {
            color: #777;
        }
        
        .color-picker {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        
        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        
        .color-option:hover {
            transform: scale(1.1);
        }
        
        .color-option.active {
            border: 2px solid white;
            outline: 2px solid var(--primary-color);
        }
        
        .color-primary {
            background-color: #0a3d62;
        }
        
        .color-blue {
            background-color: #3498db;
        }
        
        .color-green {
            background-color: #2ecc71;
        }
        
        .color-purple {
            background-color: #9b59b6;
        }
        
        .color-orange {
            background-color: #e67e22;
        }
        
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }
        
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        
        input:checked + .slider {
            background-color: var(--primary-color);
        }
        
        input:focus + .slider {
            box-shadow: 0 0 1px var(--primary-color);
        }
        
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        
        .toggle-group {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .toggle-label {
            font-weight: 500;
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- Dashboard Sidebar -->
        <div class="dashboard-sidebar">
            <div class="dashboard-logo">
                <a href="../index.html">
                    <img src="../images/logo.jpeg" alt="Rhoda Traders Logo" class="logo">
                </a>
            </div>
            
            <ul class="dashboard-nav">
                <li><a href="index.html"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li><a href="applications.html"><i class="fas fa-user-plus"></i> Applications</a></li>
                <li><a href="workers.html"><i class="fas fa-users"></i> Workers</a></li>
                <li><a href="shipments.html"><i class="fas fa-box"></i> Shipments</a></li>
                <li><a href="reports.html"><i class="fas fa-file-alt"></i> Reports</a></li>
                <li><a href="payments.html"><i class="fas fa-money-bill-wave"></i> Payments</a></li>
                <li><a href="messages.html"><i class="fas fa-envelope"></i> Messages</a></li>
                <li><a href="settings.html" class="active"><i class="fas fa-cog"></i> Settings</a></li>
                <li><a href="../index.html"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
            </ul>
        </div>
        
        <!-- Dashboard Main Content -->
        <div class="dashboard-main">
            <div class="dashboard-header">
                <h1 class="dashboard-title">Settings</h1>
                <div class="user-info">
                    <span class="user-greeting">Welcome, <strong>Admin</strong></span>
                    <div class="user-avatar">
                        <img src="../images/admin-avatar.jpg" alt="Admin Avatar">
                    </div>
                </div>
            </div>
            
            <!-- Settings Container -->
            <div class="settings-container">
                <!-- Settings Navigation -->
                <div class="settings-nav">
                    <h3>Settings</h3>
                    <ul>
                        <li><a href="#general" class="active"><i class="fas fa-sliders-h"></i> General</a></li>
                        <li><a href="#account"><i class="fas fa-user-circle"></i> Account</a></li>
                        <li><a href="#notifications"><i class="fas fa-bell"></i> Notifications</a></li>
                        <li><a href="#appearance"><i class="fas fa-paint-brush"></i> Appearance</a></li>
                        <li><a href="#security"><i class="fas fa-shield-alt"></i> Security</a></li>
                        <li><a href="#integration"><i class="fas fa-plug"></i> Integrations</a></li>
                        <li><a href="#payment"><i class="fas fa-credit-card"></i> Payment Settings</a></li>
                        <li><a href="#backup"><i class="fas fa-database"></i> Backup & Export</a></li>
                    </ul>
                </div>
                
                <!-- Settings Content -->
                <div class="settings-content">
                    <!-- General Settings -->
                    <div id="general" class="settings-section">
                        <h2>General Settings</h2>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="company-name">Company Name</label>
                                <input type="text" id="company-name" class="form-control" value="Rhoda Traders">
                            </div>
                            
                            <div class="form-group">
                                <label for="website-url">Website URL</label>
                                <input type="url" id="website-url" class="form-control" value="https://rhodatraders.com">
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="contact-email">Contact Email</label>
                                <input type="email" id="contact-email" class="form-control" value="contact@rhodatraders.com">
                            </div>
                            
                            <div class="form-group">
                                <label for="contact-phone">Contact Phone</label>
                                <input type="tel" id="contact-phone" class="form-control" value="+1 (555) 123-4567">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="address">Company Address</label>
                            <textarea id="address" class="form-control" rows="3">123 Business Street, Suite 456, New York, NY 10001, USA</textarea>
                        </div>
                        
                        <div class="toggle-group">
                            <div class="toggle-label">Enable Public Job Listings</div>
                            <label class="switch">
                                <input type="checkbox" checked>
                                <span class="slider"></span>
                            </label>
                        </div>
                        
                        <div class="toggle-group">
                            <div class="toggle-label">Auto-approve Workers</div>
                            <label class="switch">
                                <input type="checkbox">
                                <span class="slider"></span>
                            </label>
                        </div>
                        
                        <div class="toggle-group">
                            <div class="toggle-label">Enable Application Submissions</div>
                            <label class="switch">
                                <input type="checkbox" checked>
                                <span class="slider"></span>
                            </label>
                        </div>
                        
                        <div class="form-actions">
                            <button class="btn btn-outline">Cancel</button>
                            <button class="btn btn-primary">Save Changes</button>
                        </div>
                    </div>
                    
                    <!-- Account Settings -->
                    <div id="account" class="settings-section" style="display: none;">
                        <h2>Account Settings</h2>
                        
                        <div class="form-group">
                            <label>Profile Picture</label>
                            <div style="display: flex; align-items: center; margin-top: 10px;">
                                <div style="width: 100px; height: 100px; border-radius: 50%; overflow: hidden; margin-right: 20px;">
                                    <img src="../images/admin-avatar.jpg" alt="Admin Avatar" style="width: 100%; height: 100%; object-fit: cover;">
                                </div>
                                <div>
                                    <button class="btn btn-outline" style="margin-right: 10px;">Change Photo</button>
                                    <button class="btn btn-outline">Remove</button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="first-name">First Name</label>
                                <input type="text" id="first-name" class="form-control" value="Admin">
                            </div>
                            
                            <div class="form-group">
                                <label for="last-name">Last Name</label>
                                <input type="text" id="last-name" class="form-control" value="User">
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label for="email">Email Address</label>
                                <input type="email" id="email" class="form-control" value="admin@rhodatraders.com">
                            </div>
                            
                            <div class="form-group">
                                <label for="phone">Phone Number</label>
                                <input type="tel" id="phone" class="form-control" value="+1 (555) 987-6543">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="bio">Bio</label>
                            <textarea id="bio" class="form-control" rows="3">Administrator at Rhoda Traders, managing the employment portal and worker operations.</textarea>
                        </div>
                        
                        <div class="form-actions">
                            <button class="btn btn-outline">Cancel</button>
                            <button class="btn btn-primary">Save Changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Firebase JavaScript Files -->
    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-analytics.js";
        import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-auth.js";
        import { getFirestore, collection, query, where, getDocs, updateDoc, doc } from "https://www.gstatic.com/firebasejs/11.5.0/firebase-firestore.js";

        // Your web app's Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyBCF-MkWe8JhkXKNoKLqzWAZxZVHMukO-c",
            authDomain: "rhoda-traders.firebaseapp.com",
            projectId: "rhoda-traders",
            storageBucket: "rhoda-traders.firebasestorage.app",
            messagingSenderId: "88738705806",
            appId: "1:88738705806:web:0cbbb1be4ce51daa7334df",
            measurementId: "G-44T210GQ6S"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const analytics = getAnalytics(app);
        const auth = getAuth();
        const db = getFirestore();

        // Check if user is logged in and is an admin
        onAuthStateChanged(auth, async (user) => {
            if (user) {
                // User is signed in
                try {
                    // Get user data from Firestore
                    const q = query(collection(db, 'users'), where('uid', '==', user.uid));
                    const querySnapshot = await getDocs(q);
                    
                    if (!querySnapshot.empty) {
                        const userData = querySnapshot.docs[0].data();
                        
                        // Check if user is an admin
                        if (userData.role === 'admin') {
                            // Update UI with admin data
                            updateAdminInfo(userData);
                            
                            // Populate settings form with admin data
                            populateSettingsForm(userData);
                        } else {
                            // Not an admin, redirect to user dashboard
                            window.location.href = '../dashboard/index.html';
                        }
                    } else {
                        // User not found in Firestore
                        window.location.href = '../login.html';
                    }
                } catch (error) {
                    console.error('Error getting user data:', error);
                    window.location.href = '../login.html';
                }
            } else {
                // User is signed out, redirect to login page
                window.location.href = '../login.html';
            }
        });

        // Update admin info in the UI
        function updateAdminInfo(userData) {
            const userGreeting = document.querySelector('.user-greeting strong');
            if (userGreeting) {
                userGreeting.textContent = userData.firstName ? `${userData.firstName} ${userData.lastName}` : 'Admin';
            }
        }

        // Populate settings form with admin data
        function populateSettingsForm(userData) {
            // In a real application, you would populate the form fields with data from Firestore
            // For demonstration purposes, we're using static data
            
            // Populate account settings
            if (userData.firstName) {
                document.getElementById('first-name').value = userData.firstName;
            }
            
            if (userData.lastName) {
                document.getElementById('last-name').value = userData.lastName;
            }
            
            if (userData.email) {
                document.getElementById('email').value = userData.email;
            }
            
            if (userData.phone) {
                document.getElementById('phone').value = userData.phone;
            }
            
            if (userData.bio) {
                document.getElementById('bio').value = userData.bio;
            }
        }

        // Handle settings navigation
        document.querySelectorAll('.settings-nav a').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Remove active class from all links
                document.querySelectorAll('.settings-nav a').forEach(item => {
                    item.classList.remove('active');
                });
                
                // Add active class to clicked link
                this.classList.add('active');
                
                // Get target section ID
                const targetId = this.getAttribute('href').substring(1);
                
                // Hide all sections
                document.querySelectorAll('.settings-section').forEach(section => {
                    section.style.display = 'none';
                });
                
                // Show target section
                document.getElementById(targetId).style.display = 'block';
            });
        });

        // Handle save changes button
        document.querySelectorAll('.btn-primary').forEach(button => {
            button.addEventListener('click', async function() {
                // In a real application, you would:
                // 1. Gather form data
                // 2. Validate form data
                // 3. Update data in Firestore
                // 4. Show success message
                
                alert('Settings saved successfully!');
            });
        });

        // Handle logout
        document.querySelector('a[href="../index.html"]').addEventListener('click', async function(event) {
            event.preventDefault();
            try {
                await signOut(auth);
                window.location.href = '../index.html';
            } catch (error) {
                console.error('Error signing out:', error);
            }
        });
    </script>

    <!-- Main JavaScript -->
    <script src="../js/main.js"></script>
</body>
</html>